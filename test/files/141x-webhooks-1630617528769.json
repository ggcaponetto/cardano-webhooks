{
    "total_rows": 3,
    "offset": 0,
    "rows": [
        {
            "id": "e14b77e5-35c7-46d0-829d-804b4b1a1a70",
            "key": "e14b77e5-35c7-46d0-829d-804b4b1a1a70",
            "value": {
                "rev": "1-6dc51149138692f8c8e2d8ad4f4d5aa0"
            },
            "doc": {
                "createdAt": "2021-09-02T21:18:35.017Z",
                "type": "webhook",
                "active": true,
                "name": "Discord Message",
                "script": "\nasync function customWebhook(){\n  \tconst updates = ctx.util.updates;\n  \tconst tables = new Set([...updates.map((update) => update.table)]);\n  \tconsole.log(`processing ${updates.length} updates of ${tables.length} channels`, {updates, tables});\n  \tconst message = `Got ${updates.length} updates from the tables: ${Array.from(tables).join(\", \")}.`\n  \tlet discordResponse = await ctx.util.axios({\n      method: \"post\",\n      url: \"https://discord.com/api/webhooks/882268616135942244/ClPNaAgaquEQyDUXbBVRb1C-gj6iFtTbieFR-3iN1DqLAm7FSvOuiDwnHTdk5fSxn-SH\",\n      data: JSON.stringify({\n\t\tcontent: message\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).catch((e) => {ctx.util.toast(e.message); return null;});\n  \tif(discordResponse){\n      ctx.util.toast(JSON.stringify(discordResponse.status));\n    }\n}\ncustomWebhook();\n",
                "_id": "e14b77e5-35c7-46d0-829d-804b4b1a1a70",
                "_rev": "1-6dc51149138692f8c8e2d8ad4f4d5aa0"
            }
        },
        {
            "id": "755dc61a-76fe-46b7-b55d-3a0d6a343e8d",
            "key": "755dc61a-76fe-46b7-b55d-3a0d6a343e8d",
            "value": {
                "rev": "1-36d9c59ab1c76c13057554cc8093742d"
            },
            "doc": {
                "createdAt": "2021-09-02T21:12:51.014Z",
                "type": "webhook",
                "active": true,
                "name": "Coinbase API Call",
                "script": "\nasync function callAPI(){\n  \tconst updates = ctx.util.updates;\n  \tconst tables = new Set([...updates.map((update) => update.table)]);\n  \tfor(let i = 0; i < updates.length; i++){\n      const update = updates[i];\n      if(i < 3){\n          console.log(`processing update ${i} of ${updates.length} (skipping all other updates)`, {updates, tables});\n          const newAdaPrice = await ctx.util.axios({\n            url: 'https://api.coinbase.com/v2/prices/ADA-USD/buy',\n          }).catch((e) => {\n             ctx.util.toast(e.message, {variant: 'error'});\n          });\n          ctx.util.toast(`You called an the Coinbase API on update ${i+1} of ${updates.length}. Response: ${JSON.stringify(newAdaPrice.data)}`);\n      }\n    }\n}\ncallAPI();\n",
                "_id": "755dc61a-76fe-46b7-b55d-3a0d6a343e8d",
                "_rev": "1-36d9c59ab1c76c13057554cc8093742d"
            }
        },
        {
            "id": "50e72c9e-be5b-40ed-be78-5104588401f7",
            "key": "50e72c9e-be5b-40ed-be78-5104588401f7",
            "value": {
                "rev": "4-96213d4e2533fbc4bff36700ecf07cbe"
            },
            "doc": {
                "createdAt": "2021-09-02T21:10:55.183Z",
                "type": "webhook",
                "active": true,
                "name": "banane",
                "script": "\nasync function customWebhook(){\n  \tconst updates = ctx.util.updates;\n  \tconst tables = new Set([...updates.map((update) => update.table)]);\n  \tconsole.log(`processing ${updates.length} updates of ${tables.length} channels`, {updates, tables});\n  \tconst message = `quante belle banane`\n  \tlet discordResponse = await ctx.util.axios({\n      method: \"post\",\n      url: \"https://discord.com/api/webhooks/882268616135942244/ClPNaAgaquEQyDUXbBVRb1C-gj6iFtTbieFR-3iN1DqLAm7FSvOuiDwnHTdk5fSxn-SH\",\n      data: JSON.stringify({\n\t\tcontent: message\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).catch((e) => {ctx.util.toast(e.message); return null;});\n  \tif(discordResponse){\n      ctx.util.toast(JSON.stringify(discordResponse.status));\n    }\n}\ncustomWebhook();\n",
                "_id": "50e72c9e-be5b-40ed-be78-5104588401f7",
                "_rev": "4-96213d4e2533fbc4bff36700ecf07cbe"
            }
        }
    ]
}
